---
- name: configure webserver with tls support
  hosts:
    # - localhost
    - nodes
  gather_facts: True
  become: true
  become_method: sudo
  become_user: root
  vars:
    nginx_port_no_tls: 80
    nginx_port_tls: 443
    domain_name: example.com
    certs_dir: /etc/ssl/certs/
    local_certs_dir: certificates
    nodes_hostnames:
      - node01
      - node02
    own_ca_cert: ca-certificate.pem
    
  tasks:
    - name: Check if the directory exists
      ansible.builtin.stat:
        path: "{{ certs_dir }}"
      register: dir_to_check

    - name: add directories if not exist
      file:
        path: "{{ certs_dir }}"
        state: directory
        mode: 0755
        group: root
        owner: root
      when: dir_to_check.stat.exists == false

    - name: create nginx repo definition
      copy:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 0644

    - name: install nginx
      yum:
        name: nginx
        update_cache: true
        state: present

    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy nodes tls key certificates 
      copy:
        src: '{{ local_certs_dir }}/{{ item }}.key'
        dest: '{{ certs_dir }}'
        owner: root
        group: root
        mode: 0644
      loop: "{{ nodes_hostnames}}"
     
    - name: copy nodes tls certificates 
      copy:
        src: '{{ local_certs_dir }}/{{ item }}.crt'
        dest: '{{ certs_dir }}'
        owner: root
        group: root
        mode: 0644
      loop: "{{ nodes_hostnames}}"

    - name: copy nodes tls ca certificate
      copy:
        src: '{{ local_certs_dir }}/ca-certificate.pem'
        dest: '{{ certs_dir }}'
        owner: root
        group: root
        mode: 0644

    - name: copy nodes tls dhparams certificates 
      copy:
        src: '{{ local_certs_dir }}/{{ item }}.dhparams.pem'
        dest: '{{ certs_dir }}/dhparams.pem'
        owner: root
        group: root
        mode: 0644
      loop: "{{ nodes_hostnames}}"

    - name: copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/tls.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: insert firewalld rule for nginx
      firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true
      loop:
        - "{{ nginx_port_no_tls }}/tcp"
        - "{{ nginx_port_tls }}/tcp"

  post_tasks:
    - name: check web site from control server
      uri:
        url: "https://{{ ansible_host }}"
        return_content: true
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
